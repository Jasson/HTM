!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DATA_SIZE	Common.h	21;"	d
LayerT	Layer.h	/^    LayerT(VecT *input_size, VecT *node_size)    {}$/;"	f	class:htm07::LayerT
LayerT	Layer.h	/^class LayerT$/;"	c	namespace:htm07
NodeT	Node.h	/^    NodeT(Layer *layer, VecT *node_start, id_t node_id)    {}$/;"	f	class:htm07::NodeT
NodeT	Node.h	/^class NodeT$/;"	c	namespace:htm07
Space	origin/SpaceOrigin.cpp	/^Space::Space(const Vector &max)$/;"	f	class:hacktm::Space
Space	origin/SpaceOrigin.h	/^  class Space {$/;"	c	namespace:hacktm
SpaceT	Space.h	/^    SpaceT(size_t dims, size_t *max) {}$/;"	f	class:htm07::SpaceT
SpaceT	Space.h	/^class SpaceT$/;"	c	namespace:htm07
SpaceTransform	origin/SpaceOrigin.cpp	/^SpaceTransform::SpaceTransform(const Space *x, const Space *y)$/;"	f	class:hacktm::SpaceTransform
SpaceTransform	origin/SpaceOrigin.h	/^  class SpaceTransform {$/;"	c	namespace:hacktm
SpatialPooler	SpatialPooler.h	/^    SpatialPooler(NodeT *node)    {}$/;"	f	class:htm07::SpatialPooler
SpatialPooler	SpatialPooler.h	/^class SpatialPooler$/;"	c	namespace:htm07
SubSpace	origin/SpaceOrigin.cpp	/^SubSpace::SubSpace(const Space *space, id_t center, scalar_t radius)$/;"	f	class:hacktm::SubSpace
SubSpace	origin/SpaceOrigin.h	/^  class SubSpace {$/;"	c	namespace:hacktm
VecT	Common.h	/^    struct VecT$/;"	s	namespace:htm07
_HTM07_COMMON_H__INC	Common.h	13;"	d
_HTM07_LAYER_H__INC	Layer.h	13;"	d
_HTM07_NODE_H__INC	Node.h	13;"	d
_HTM07_SPACE_H__INC	Space.h	12;"	d
_HTM07_SPATIAL_POOLER_H__INC	SpatialPooler.h	12;"	d
__HACKTM_SPACE_H__	origin/SpaceOrigin.h	13;"	d
__apply	origin/SpaceOrigin.h	/^    void __apply(id_t id, const unsigned dim, F &func)$/;"	f	class:hacktm::SubSpace
__center	origin/SpaceOrigin.h	/^    Vector __center;$/;"	m	class:hacktm::SubSpace
__dimension	origin/SpaceOrigin.h	/^    const unsigned __dimension;$/;"	m	class:hacktm::Space
__idProjector	origin/SpaceOrigin.h	/^    Vector         __idProjector;$/;"	m	class:hacktm::Space
__inOutRatios	origin/SpaceOrigin.h	/^    Vector __inOutRatios;$/;"	m	class:hacktm::SpaceTransform
__inputSpace	origin/SpaceOrigin.h	/^    const Space *__inputSpace;$/;"	m	class:hacktm::SpaceTransform
__maxCoordinates	origin/SpaceOrigin.h	/^    Vector         __maxCoordinates;$/;"	m	class:hacktm::Space
__maxRatio	origin/SpaceOrigin.h	/^    unsigned __maxRatio;$/;"	m	class:hacktm::SpaceTransform
__maxSide	origin/SpaceOrigin.h	/^    scalar_t       __maxSide;$/;"	m	class:hacktm::Space
__maxSub	origin/SpaceOrigin.h	/^    Vector __maxSub;$/;"	m	class:hacktm::SubSpace
__minId	origin/SpaceOrigin.h	/^    id_t __minId;$/;"	m	class:hacktm::SubSpace
__minSub	origin/SpaceOrigin.h	/^    Vector __minSub;$/;"	m	class:hacktm::SubSpace
__outputSpace	origin/SpaceOrigin.h	/^    const Space *__outputSpace;$/;"	m	class:hacktm::SpaceTransform
__radius	origin/SpaceOrigin.h	/^    scalar_t __radius;$/;"	m	class:hacktm::SubSpace
__recalculateSize	origin/SpaceOrigin.cpp	/^SubSpace::__recalculateSize()$/;"	f	class:hacktm::SubSpace
__size	origin/SpaceOrigin.h	/^    unsigned       __size;$/;"	m	class:hacktm::Space
__space	origin/SpaceOrigin.h	/^    const Space *__space;$/;"	m	class:hacktm::SubSpace
apply	origin/SpaceOrigin.h	/^    void apply(F &func)$/;"	f	class:hacktm::SubSpace
collect	origin/SpaceOrigin.h	/^    scalar_t collect(T begin, T end, F &func)$/;"	f	class:hacktm::SubSpace
contains	origin/SpaceOrigin.h	/^    inline bool contains(Vector v) const$/;"	f	class:hacktm::Space
contains	origin/SpaceOrigin.h	/^    inline bool contains(id_t id) const { return id < __size; }$/;"	f	class:hacktm::Space
coord_t	Common.h	/^    typedef int         coord_t;$/;"	t	namespace:htm07
data_t	Common.h	/^    typedef int         data_t;$/;"	t	namespace:htm07
dims	Common.h	/^        size_t dims;$/;"	m	struct:htm07::VecT
getCoord	origin/SpaceOrigin.h	/^    inline coord_t getCoord(id_t id, unsigned i) const$/;"	f	class:hacktm::Space
getDimension	origin/SpaceOrigin.h	/^    inline const unsigned getDimension() const { return __dimension; }$/;"	f	class:hacktm::Space
getDistance	origin/SpaceOrigin.cpp	/^Space::getDistance(id_t id1, id_t id2) const$/;"	f	class:hacktm::Space
getIdFromVector	origin/SpaceOrigin.h	/^    inline id_t getIdFromVector(Vector &v) const$/;"	f	class:hacktm::Space
getIdProjectorValue	origin/SpaceOrigin.h	/^    inline coord_t getIdProjectorValue(int i) const  { return __idProjector[i]; }$/;"	f	class:hacktm::Space
getMaxCoord	origin/SpaceOrigin.h	/^    inline coord_t getMaxCoord(int i) const { return __maxCoordinates[i]; }$/;"	f	class:hacktm::Space
getMaxCoord	origin/SpaceOrigin.h	/^    inline coord_t getMaxCoord(int i) const { return __maxSub[i]; }$/;"	f	class:hacktm::SubSpace
getMaxSide	origin/SpaceOrigin.h	/^    inline const scalar_t getMaxSide() const { return __maxSide; }$/;"	f	class:hacktm::Space
getMinCoord	origin/SpaceOrigin.h	/^    inline coord_t getMinCoord(int i) const { return __minSub[i]; }$/;"	f	class:hacktm::SubSpace
getMinId	origin/SpaceOrigin.h	/^    inline id_t getMinId() const { return __minId; }$/;"	f	class:hacktm::SubSpace
getRadius	origin/SpaceOrigin.h	/^    inline scalar_t getRadius() const { return __radius; };$/;"	f	class:hacktm::SubSpace
getSize	origin/SpaceOrigin.h	/^    inline const unsigned getSize() const { return __size; }$/;"	f	class:hacktm::Space
getSpace	origin/SpaceOrigin.h	/^    inline const Space *getSpace() const { return __space; }$/;"	f	class:hacktm::SubSpace
hacktm	origin/SpaceOrigin.cpp	/^namespace hacktm {$/;"	n	file:
hacktm	origin/SpaceOrigin.h	/^namespace hacktm {$/;"	n
htm07	Common.cpp	/^namespace htm07 {$/;"	n	file:
htm07	Common.h	/^namespace htm07 {$/;"	n
htm07	Layer.cpp	/^namespace htm07 {$/;"	n	file:
htm07	Layer.h	/^namespace htm07 {$/;"	n
htm07	Node.cpp	/^namespace htm07 {$/;"	n	file:
htm07	Node.h	/^namespace htm07 {$/;"	n
htm07	Space.h	/^namespace htm07 {$/;"	n
htm07	SpatialPooler.cpp	/^namespace htm07 {$/;"	n	file:
htm07	SpatialPooler.h	/^namespace htm07 {$/;"	n
id_t	Common.h	/^    typedef unsigned    id_t;$/;"	t	namespace:htm07
main	main.cpp	/^int main( int argc, char** argv )$/;"	f
max	Common.h	/^        size_t *max;$/;"	m	struct:htm07::VecT
resize	origin/SpaceOrigin.cpp	/^SubSpace::resize(scalar_t radius)$/;"	f	class:hacktm::SubSpace
setVectorFromId	origin/SpaceOrigin.cpp	/^Space::setVectorFromId(id_t id, Vector &v) const$/;"	f	class:hacktm::Space
transformIdBackward	origin/SpaceOrigin.cpp	/^SpaceTransform::transformIdBackward(id_t oid) const$/;"	f	class:hacktm::SpaceTransform
transformIdForward	origin/SpaceOrigin.cpp	/^SpaceTransform::transformIdForward(id_t iid) const {$/;"	f	class:hacktm::SpaceTransform
transformScalarBackward	origin/SpaceOrigin.h	/^    scalar_t transformScalarBackward(scalar_t oval) const$/;"	f	class:hacktm::SpaceTransform
transformScalarForward	origin/SpaceOrigin.h	/^    inline scalar_t transformScalarForward(scalar_t ival) const$/;"	f	class:hacktm::SpaceTransform
~LayerT	Layer.h	/^    ~LayerT()   {}$/;"	f	class:htm07::LayerT
~NodeT	Node.h	/^    ~NodeT()   {}$/;"	f	class:htm07::NodeT
~Space	Space.h	/^    ~Space() {}$/;"	f	class:htm07::SpaceT
~SpatialPooler	SpatialPooler.h	/^    ~SpatialPooler()   {}$/;"	f	class:htm07::SpatialPooler
